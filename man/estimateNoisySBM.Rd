% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateNoisySBM.R
\name{estimateNoisySBM}
\alias{estimateNoisySBM}
\title{Inference of the Noisy SBM  Model}
\usage{
estimateNoisySBM(
  data,
  symmetric,
  nBlocksMin = 1,
  nBlocksMax = 10,
  nBlocksInit = 1,
  save = FALSE,
  verbose = TRUE,
  nCores = NULL,
  maxIterVE = NULL,
  maxIterVEM = NULL
)
}
\arguments{
\item{data}{:  list of d Noisy versions of a network}

\item{symmetric}{:  if true the inference network is symmetric (non directed),}

\item{nBlocksMin}{:  minimum number of Blocks}

\item{nBlocksMax}{:  maximum number of Blocks}

\item{nBlocksInit}{:  initialisation number of Blocks}

\item{save}{:  an optional boolean. If TRUE  save the estimated parameters for intermediate visited models. Otherwise, only the better model (in ICL sense) is the ouput. Default value \code{= FALSE}.}

\item{verbose}{:  an optional boolean. If  TRUE, display the current step of the search algorithm}

\item{nCores}{:  an optional integer specifying the number or cores used for the estimation. Not parallelized on windows. If \code{ncores = NULL}, then half of the cores are used.}

\item{maxIterVE}{:  an optional integer  specifying the maximum number of iterations in the VE step of the VEM algorithm. If NULL then default value  \code{= 1000}}

\item{maxIterVEM}{:  an optional integer  specifying the maximum number of iterations of the VEM algorithm. If NULL then default value Default value  \code{= 1000}}
}
\value{
a list of estimated parameters for the different models ordered by decreasing ICL. If save \code{= FALSE}, the length is of length 1 (only the better model is returned).
\describe{
\item{\code{fittedModel}}{contains the results of the inference. \code{res$fittedModel[[1]]}  is a list with fields
\describe{
\item{\code{paramEstim}}{a MBMfit object.}
\item{\code{ICL}}{the penalized likelihood criterion ICL.}
\item{\code{LowerBound}}{the sequence of the varational bound of the likelihood through iterations of the VEM.}
\item{\code{monitoring}}{TRUE if the VEM reached convergence.}
}
}
}
#' @examples
nNodes  = 100
directed = TRUE
mixtureParam = c(1/3,1/2,1/6)
nBlocks   = length(mixtureParam)
connectParam <- matrix(rbeta(nBlocks^2,1.5,1.5 ),nBlocks,nBlocks)
connectParam <- 0.5*(connectParam + t(connectParam))
emissionParam <- list()
d <- 4
emissionParam$noEdgeParam = list(mean=rep(0,d),var = diag(0.1,nrow = d,ncol = d))
emissionParam$EdgeParam = list( mean= 1:d,var =  diag(0.1,nrow = d,ncol = d))
dataSim <- rNoisySBM(nNodes,symmetric = TRUE, mixtureParam,connectParam,emissionParam,seed = NULL)
data <- dataSim$noisyNetworks
res <- estimateNoisySBM(data,symmetric  = TRUE)
}
\description{
Inference of the Noisy SBM  Model
}
\details{
The function \code{multipartiteBM} selects the better numbers of blocks in each FG (with a penalized likelihood criterion). The model selection is performed with a forward backward strategy and the likelihood of each model is maximized with a variational EM).
}
